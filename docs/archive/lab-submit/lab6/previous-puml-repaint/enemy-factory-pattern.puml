@startuml
class MediumGame {
'- ShootContext heroContext
'- ShootContext enemyContext
'+ <<Create>> MediumGame(int,boolean)
'+ void generateAllEnemy()
'+ void playBGM()
'+ void shootAction()
'+ void aircraftsMoveAction()
'+ void crashCheckAction()
'+ void paint(Graphics)
}
class BossFactory {
- int locationX
- int locationY
- int speedX
- int hp
- int speedY
- int score
- String type
+ AbstractEnemy createEnemy(double)
}
class MobEnemy {
- int direction
+ <<Create>> MobEnemy(int,int,int,int,int,int)
+ void bombExplode()
+ int getDirection()
+ void setDirection(int)
}
class EliteEnemy {
- int shootNum
- int power
- int direction
+ <<Create>> EliteEnemy(int,int,int,int,int,int)
+ int getDirection()
+ void setDirection(int)
+ void forward()
+ List<BaseBullet> shoot()
+ int getShootNum()
+ void setShootNum(int)
+ int getPower()
+ void setPower(int)
+ void bombExplode()
}
interface EnemyFactory {
+ {abstract}AbstractEnemy createEnemy(double)
}
class EliteFactory {
- int locationX
- int locationY
- int speedX
- int speedY
- int hp
- int score
- String type
+ AbstractEnemy createEnemy(double)
}
class DifficultGame {
'- ShootContext heroContext
'- ShootContext enemyContext
'+ <<Create>> DifficultGame(int,boolean)
'+ void generateAllEnemy()
'+ void playBGM()
'+ void shootAction()
'+ void aircraftsMoveAction()
'+ void crashCheckAction()
'+ void paint(Graphics)
}
abstract class AbstractEnemy {
- int score
+ <<Create>> AbstractEnemy(int,int,int,int,int,int)
+ void forward()
+ List<BaseBullet> shoot()
+ int getScore()
+ void setScore(int)
+ void explode()
}
class SimpleGame {
'- ShootContext heroContext
'- ShootContext enemyContext
'+ <<Create>> SimpleGame(int,boolean)
'+ void generateAllEnemy()
'+ void playBGM()
'+ void shootAction()
'+ void aircraftsMoveAction()
'+ void crashCheckAction()
'+ void paint(Graphics)
}
class BossEnemy {
- int shootNum
- int power
- int direction
+ <<Create>> BossEnemy(int,int,int,int,int,int)
+ List<BaseBullet> shoot()
+ void forward()
+ void bombExplode()
+ int getShootNum()
+ void setShootNum(int)
+ int getPower()
+ void setPower(int)
+ int getDirection()
+ void setDirection(int)
}
class MobFactory {
- int locationX
- int locationY
- int speedX
- int speedY
- int hp
- int score
- String type
+ AbstractEnemy createEnemy(double)
}


AbstractEnemy <|--- MobEnemy
AbstractEnemy <|--- EliteEnemy
AbstractEnemy <|--- BossEnemy

EnemyFactory <|.. BossFactory
EnemyFactory <|.. EliteFactory
EnemyFactory <|.. MobFactory
MobFactory ..> MobEnemy
EliteFactory ..> EliteEnemy
BossFactory ..> BossEnemy

MediumGame ..> AbstractEnemy
MediumGame ..> EnemyFactory
SimpleGame ..> AbstractEnemy
SimpleGame ..> EnemyFactory
DifficultGame ..> AbstractEnemy
DifficultGame ..> EnemyFactory
@enduml