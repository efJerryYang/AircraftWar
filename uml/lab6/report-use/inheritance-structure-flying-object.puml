@startuml
class BombProp {
+ List<BombSubscriber> subscribers
+ <<Create>> BombProp(int,int,int,int,int,String)
+ void activate(HeroAircraft,List<AbstractEnemy>,List<BaseBullet>,List<BaseBullet>,int)
+ void subscribe(BombSubscriber)
+ void unsubscribe(BombSubscriber)
+ void unsubscribe(List<BombSubscriber>)
+ void notifyAllSubscribers()
}
class EnemyBullet {
- int score
+ <<Create>> EnemyBullet(int,int,int,int,int)
+ void bombExplode()
}
abstract class AbstractAircraft {
# int hp
- int maxHp
- int shootNum
- int direction
- int power
+ <<Create>> AbstractAircraft(int,int,int,int,int)
+ int getShootNum()
+ void setShootNum(int)
+ int getDirection()
+ void setDirection(int)
+ int getPower()
+ void setPower(int)
+ int getMaxHp()
+ void setMaxHp(int)
+ void decreaseHp(int)
+ void increaseHp(int)
+ int getHp()
+ void setHp(int)
+ {abstract}List<BaseBullet> shoot()
}
class BulletProp {
+ <<Create>> BulletProp(int,int,int,int,int,String)
+ void activate(HeroAircraft,List<AbstractEnemy>,List<BaseBullet>,List<BaseBullet>,int)
}
class EliteEnemy {
- int shootNum
- int power
- int direction
+ <<Create>> EliteEnemy(int,int,int,int,int,int)
+ int getDirection()
+ void setDirection(int)
+ void forward()
+ List<BaseBullet> shoot()
+ int getShootNum()
+ void setShootNum(int)
+ int getPower()
+ void setPower(int)
+ void bombExplode()
}
class BaseBullet {
- int power
+ <<Create>> BaseBullet(int,int,int,int,int)
+ void forward()
+ int getPower()
+ void bombExplode()
}
class HeroBullet {
+ <<Create>> HeroBullet(int,int,int,int,int)
}
class MobEnemy {
- int direction
+ <<Create>> MobEnemy(int,int,int,int,int,int)
+ void bombExplode()
+ int getDirection()
+ void setDirection(int)
}
class HeroAircraft {
+ {static} int SCATTERING_SHOOTNUM
+ {static} int BOSS_APPEAR_SCORE
+ {static} int HERO_MAX_HP
- {static} HeroAircraft heroAircraft
- int shootNum
- int bulletPropStage
- int bloodPropStage
- int power
- boolean bulletValid
- boolean shieldValid
- boolean bulletSpeedUp
- <<Create>> HeroAircraft(int,int,int,int,int)
+ {static} HeroAircraft getHeroAircraft()
+ {static} void setHeroAircraft(HeroAircraft)
+ void initialize()
+ void forward()
+ List<BaseBullet> shoot()
+ int getShootNum()
+ void setShootNum(int)
+ int getPower()
+ void setPower(int)
+ boolean isBulletValid()
+ void setBulletValid(boolean)
+ boolean isShieldValid()
+ void setShieldValid(boolean)
+ boolean isBulletSpeedUp()
+ void setBulletSpeedUp(boolean)
+ int getBulletPropStage()
+ void setBulletPropStage(int)
+ int getBloodPropStage()
+ void setBloodPropStage(int)
}
abstract class AbstractFlyingObject {
# int locationX
# int locationY
# int speedX
# int speedY
# BufferedImage image
# int width
# int height
# boolean isValid
- int score
+ <<Create>> AbstractFlyingObject()
+ <<Create>> AbstractFlyingObject(int,int,int,int)
+ boolean isValid()
+ void setValid(boolean)
+ int getSpeedX()
+ int setSpeedX(int)
+ void forward()
+ boolean crash(AbstractFlyingObject)
+ int getLocationX()
+ void setLocationX(int)
+ int getLocationY()
+ void setLocationY(int)
+ void setLocation(double,double)
+ int getSpeedY()
+ void setSpeedY(int)
+ BufferedImage getImage()
+ void setImage(BufferedImage)
+ int getWidth()
+ void setWidth(int)
+ int getHeight()
+ void setHeight(int)
+ boolean notValid()
+ void vanish()
+ void explode()
+ int getScore()
}
abstract class AbstractEnemy {
- int score
+ <<Create>> AbstractEnemy(int,int,int,int,int,int)
+ void forward()
+ List<BaseBullet> shoot()
+ int getScore()
+ void setScore(int)
+ void explode()
}
class BloodProp {
- int speedX
- int speedY
+ <<Create>> BloodProp(int,int,int,int,int,String)
+ void activate(HeroAircraft,List<AbstractEnemy>,List<BaseBullet>,List<BaseBullet>,int)
}
abstract class AbstractProp {
- int score
- String type
+ <<Create>> AbstractProp(int,int,int,int,int,String)
+ void activate(HeroAircraft,List<AbstractEnemy>,List<BaseBullet>,List<BaseBullet>,int)
+ int getScore()
+ void setScore(int)
}
class BossEnemy {
- int shootNum
- int power
- int direction
+ <<Create>> BossEnemy(int,int,int,int,int,int)
+ List<BaseBullet> shoot()
+ void forward()
+ void bombExplode()
+ int getShootNum()
+ void setShootNum(int)
+ int getPower()
+ void setPower(int)
+ int getDirection()
+ void setDirection(int)
}


AbstractProp <|-- BombProp
BaseBullet <|-- EnemyBullet
AbstractFlyingObject <|-- AbstractAircraft
AbstractProp <|-- BulletProp
AbstractEnemy <|-- EliteEnemy
AbstractFlyingObject <|-- BaseBullet
BaseBullet <|-- HeroBullet
AbstractEnemy <|-- MobEnemy
AbstractAircraft <|-- HeroAircraft
AbstractAircraft <|-- AbstractEnemy
AbstractProp <|-- BloodProp
AbstractFlyingObject <|-- AbstractProp
AbstractEnemy <|-- BossEnemy
@enduml