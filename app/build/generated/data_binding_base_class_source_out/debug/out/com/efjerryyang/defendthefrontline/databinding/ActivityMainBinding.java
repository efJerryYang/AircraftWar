// Generated by view binder compiler. Do not edit!
package com.efjerryyang.defendthefrontline.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.efjerryyang.defendthefrontline.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Switch audioSwitch;

  @NonNull
  public final Button difficultButton;

  @NonNull
  public final Button mediumButton;

  @NonNull
  public final Button simpleButton;

  @NonNull
  public final TextView textView;

  private ActivityMainBinding(@NonNull RelativeLayout rootView, @NonNull Switch audioSwitch,
      @NonNull Button difficultButton, @NonNull Button mediumButton, @NonNull Button simpleButton,
      @NonNull TextView textView) {
    this.rootView = rootView;
    this.audioSwitch = audioSwitch;
    this.difficultButton = difficultButton;
    this.mediumButton = mediumButton;
    this.simpleButton = simpleButton;
    this.textView = textView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.audioSwitch;
      Switch audioSwitch = ViewBindings.findChildViewById(rootView, id);
      if (audioSwitch == null) {
        break missingId;
      }

      id = R.id.difficultButton;
      Button difficultButton = ViewBindings.findChildViewById(rootView, id);
      if (difficultButton == null) {
        break missingId;
      }

      id = R.id.mediumButton;
      Button mediumButton = ViewBindings.findChildViewById(rootView, id);
      if (mediumButton == null) {
        break missingId;
      }

      id = R.id.simpleButton;
      Button simpleButton = ViewBindings.findChildViewById(rootView, id);
      if (simpleButton == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new ActivityMainBinding((RelativeLayout) rootView, audioSwitch, difficultButton,
          mediumButton, simpleButton, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
